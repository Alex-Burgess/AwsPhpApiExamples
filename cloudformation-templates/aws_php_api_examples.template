{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
      "AppName" : {
         "Type" : "String",
         "Description" : "Enter the name for the application",
         "AllowedPattern" : "^[a-z0-9-]*$",
         "ConstraintDescription" : "AppName must consist of lowercase letters, numbers or hypens"
      },
      "Environment": {
         "Type" : "String",
         "AllowedValues" : ["prod", "uat", "dev", "test"],
         "Description" : "Enter the environment",
         "ConstraintDescription" : "Environment must be one of prod, uat, dev, or test"
      },
      "ApplicationBucketName" : {
         "Type" : "String",
         "Description" : "Enter the S3 bucket name, where the php applicaiton zip file resides"
      },
      "ApplicationObjectLocation" : {
         "Type" : "String",
         "Description" : "Enter the S3 key location for the php application zip file"
      },
      "KmsKeyAdminUser" : {
         "Type" : "String",
         "Description" : "Enter the user name of the KMS Key administrator"
      },
      "KmsKeyDevUser" : {
         "Type" : "String",
         "Description" : "Enter the user name of a Dev user for KMS Key"
      },
      "SpotPrice" : {
         "Type" : "Number",
         "Default" : "0.12",
         "Description" : "Enter the maximum value for spot price"
      }
  },
  "Resources": {
     "Application": {
        "Type": "AWS::ElasticBeanstalk::Application",
        "Properties": {
           "ApplicationName" : {"Ref" : "AppName" },
            "Description": "AWS PHP API Examples Application",
            "ResourceLifecycleConfig" : {
               "ServiceRole" : { "Fn::Join" : [ "", [ "arn:aws:iam::", { "Ref" : "AWS::AccountId" }, ":role/aws-elasticbeanstalk-service-role" ] ]},
               "VersionLifecycleConfig" : {
                  "MaxCountRule" : {
                     "DeleteSourceFromS3" : true,
                     "Enabled" : true,
                     "MaxCount" : 5
                  }
               }
            }
         }
      },
      "ApplicationVersion": {
         "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
         "Properties": {
            "ApplicationName": { "Ref": "Application" },
            "Description": "PHP API Code Examples Application Version",
            "SourceBundle": {
               "S3Bucket":  { "Ref": "ApplicationBucketName"},
               "S3Key": {"Ref": "ApplicationObjectLocation"}
            }
         }
      },
      "ApplicationConfigurationTemplate": {
         "Type": "AWS::ElasticBeanstalk::ConfigurationTemplate",
         "Properties": {
            "ApplicationName": { "Ref": "Application" },
            "Description": { "Fn::Join" : [ " ", [ "Configuration Template for", { "Ref": "Application" } ] ] },
            "OptionSettings": [
               {
                  "Namespace": "aws:autoscaling:asg",
                  "OptionName": "MinSize",
                  "Value": "1"
               },
               {
                  "Namespace": "aws:autoscaling:asg",
                  "OptionName": "MaxSize",
                  "Value": "3"
               },
               {
                  "Namespace": "aws:elasticbeanstalk:environment",
                  "OptionName": "EnvironmentType",
                  "Value": "LoadBalanced"
               },
               {
                  "Namespace": "aws:elasticbeanstalk:environment",
                  "OptionName": "ServiceRole",
                  "Value": "aws-elasticbeanstalk-service-role"
               },
               {
                  "Namespace": "aws:autoscaling:launchconfiguration",
                  "OptionName": "IamInstanceProfile",
                  "Value": "aws-elasticbeanstalk-ec2-role"
               },
               {
                  "Namespace": "aws:elasticbeanstalk:application:environment",
                  "OptionName": "PHP_APP_ENV",
                  "Value": "DEV"
               },
               {
                  "Namespace": "aws:elasticbeanstalk:application:environment",
                  "OptionName": "EC2_SPOT_PRICE",
                  "Value": { "Ref" : "SpotPrice" }
               }
            ],
            "SolutionStackName": "64bit Amazon Linux 2018.03 v2.7.1 running PHP 7.1"
         }
      },
      "ApplicationEnvironment": {
         "Type": "AWS::ElasticBeanstalk::Environment",
         "Properties": {
            "ApplicationName": { "Ref": "Application" },
            "EnvironmentName" : { "Fn::Sub": [ "${app}-${env}", { "app": {"Ref" : "AppName" }, "env": {"Ref" : "Environment"}} ]},
            "Description": "Environment running PHP API Examples",
            "TemplateName": { "Ref": "ApplicationConfigurationTemplate" },
            "VersionLabel": { "Ref": "ApplicationVersion" }
         }
      },
      "ApplicationRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "RoleName": { "Fn::Sub": [ "${app}-role", { "app": {"Ref" : "AppName" }} ]},
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "AWS": {
                        "Fn::Join" : [ "", [ "arn:aws:iam::", { "Ref" : "AWS::AccountId" }, ":role/aws-elasticbeanstalk-ec2-role" ] ]
                     }
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Policies": [ {
               "PolicyName": { "Fn::Sub": [ "${app}-policy", { "app": {"Ref" : "AppName" }} ]},
               "PolicyDocument": {
                  "Version" : "2012-10-17",
                  "Statement": [{
                     "Effect": "Allow",
                     "Action": ["s3:ListAllMyBuckets"],
                     "Resource": ["*"]
                   },
                   {
                     "Effect": "Allow",
                     "Action": "s3:*",
                     "Resource": [
                        { "Fn::Sub": [ "arn:aws:s3:::${app}*", { "app": {"Ref" : "AppName" }} ]},
                     ]
                  }]
               }
            } ]
         }
      },
      "ApplicationKey" : {
        "Type" : "AWS::KMS::Key",
        "Properties" : {
          "Description" : { "Fn::Sub": [ "An encryption key for the ${app} application", { "app": {"Ref" : "AppName" }} ] },
          "KeyPolicy" : {
            "Version": "2012-10-17",
            "Id": { "Fn::Sub": [ "${app}-key-policy", { "app": {"Ref" : "AppName" }} ]},
            "Statement": [
              {
                "Sid": "Enable IAM User Permissions",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                     "Fn::Join" : [ "", [ "arn:aws:iam::", { "Ref" : "AWS::AccountId" }, ":root" ] ]
                  }
                },
                "Action": "kms:*",
                "Resource": "*"
              },
              {
                "Sid": "Allow access for Key Administrators",
                "Effect": "Allow",
                "Principal": {
                   "AWS" : {
                     "Fn::Join" : [ "", [ "arn:aws:iam::", { "Ref" : "AWS::AccountId" }, ":user/", { "Ref": "KmsKeyAdminUser" } ] ]
                     }
                },
                "Action": [
                  "kms:Create*",
                  "kms:Describe*",
                  "kms:Enable*",
                  "kms:List*",
                  "kms:Put*",
                  "kms:Update*",
                  "kms:Revoke*",
                  "kms:Disable*",
                  "kms:Get*",
                  "kms:Delete*",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "kms:ScheduleKeyDeletion",
                  "kms:CancelKeyDeletion"
                ],
                "Resource": "*"
              },
              {
                "Sid": "Allow use of the key",
                "Effect": "Allow",
                "Principal": {
                   "AWS": [
                     { "Fn::Join" : [ "", [ "arn:aws:iam::", { "Ref" : "AWS::AccountId" }, ":user/", { "Ref": "KmsKeyDevUser" } ] ] },
                     { "Fn::Join" : [ "", [ "arn:aws:iam::", { "Ref" : "AWS::AccountId" }, ":role/", { "Ref": "ApplicationRole" } ] ]}
                  ]
                },
                "Action": [
                  "kms:Encrypt",
                  "kms:Decrypt",
                  "kms:ReEncrypt*",
                  "kms:GenerateDataKey*",
                  "kms:DescribeKey"
                ],
                "Resource": "*"
              },
              {
                "Sid": "Allow attachment of persistent resources",
                "Effect": "Allow",
                "Principal": {
                  "AWS": [
                     { "Fn::Join" : [ "", [ "arn:aws:iam::", { "Ref" : "AWS::AccountId" }, ":user/", { "Ref": "KmsKeyDevUser" } ] ] },
                     { "Fn::Join" : [ "", [ "arn:aws:iam::", { "Ref" : "AWS::AccountId" }, ":role/", { "Ref": "ApplicationRole" } ] ]}
                  ]
                },
                "Action": [
                  "kms:CreateGrant",
                  "kms:ListGrants",
                  "kms:RevokeGrant"
                ],
                "Resource": "*",
                "Condition": {
                  "Bool": {
                    "kms:GrantIsForAWSResource": "true"
                  }
                }
              }
            ]
          }
        }
      },
      "ApplicationKeyAlias" : {
         "Type" : "AWS::KMS::Alias",
         "Properties" : {
            "AliasName": { "Fn::Sub": [ "alias/${app}-application-key", { "app": {"Ref" : "AppName" }} ]},
            "TargetKeyId" : {"Ref":"ApplicationKey"}
         }
      },
      "BucketNonSSE": {
         "Type" : "AWS::S3::Bucket",
         "Properties" : {
            "BucketName": { "Fn::Sub": [ "${app}-non-sse", { "app": {"Ref" : "AppName" }} ]},
            "AccessControl" : "Private",
         }
      },
      "BucketWithSSE": {
         "Type" : "AWS::S3::Bucket",
         "Properties" : {
            "BucketName": { "Fn::Sub": [ "${app}-sse", { "app": {"Ref" : "AppName" }} ]},
            "AccessControl" : "Private",
            "BucketEncryption": {
               "ServerSideEncryptionConfiguration": [
               {
                  "ServerSideEncryptionByDefault": {
                     "SSEAlgorithm": "aws:kms",
                     "KMSMasterKeyID": { "Ref" : "ApplicationKey" }
                  }
               }]
            }
         }
      }
   },
   "Outputs" : {
      "ApplicationUrl" : {
         "Description" : "URL of AWS Elastic Beanstalk Environment",
         "Value" : { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "ApplicationEnvironment", "EndpointURL" ] }]]}
      },
      "ApplicationName" : {
         "Description" : "Name of Elastic Beanstalk application",
         "Value" : { "Ref" : "Application" }
      },
      "ApplicationVersion" : {
         "Description" : "Version of application deployed to Elastic Beanstalk",
         "Value" : { "Fn::Join" : [ "", [ "s3://", { "Ref": "ApplicationBucketName" }, "/", {"Ref": "ApplicationObjectLocation"} ] ] },
      },
      "BucketWithoutSSEName" : {
         "Description" : "Name of S3 Bucket without SSE configured",
         "Value" : { "Ref" : "BucketNonSSE" }
      },
      "BucketWithSSEName" : {
         "Description" : "Name of S3 Bucket with SSE configured",
         "Value" : { "Ref" : "BucketWithSSE" }
      },
      "ApplicationRoleDefinitionName" : {
         "Description" : "Name of role that permissions the Elastic Beanstalk application to perform S3 actions",
         "Value" : { "Ref" : "ApplicationRole" }
      },
      "ApplicationKeyId" : {
         "Description" : "Name of role that permissions the Elastic Beanstalk application to perform S3 actions",
         "Value" : { "Ref" : "ApplicationKey" }
      },
      "ApplicationKeyAlias" : {
         "Description" : "Name of role that permissions the Elastic Beanstalk application to perform S3 actions",
         "Value" : { "Ref" : "ApplicationKeyAlias" }
      },
      "SpotPrice" : {
         "Description" : "Spot price used for ec2 instances in the Elastic Beanstalk application",
         "Value" : { "Ref" : "SpotPrice" }
      }
   }
}
